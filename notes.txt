



#Products


,
  "name": "parfum  ",
  "slug": "parfum1",
  "category": "parfum",
  "image": "/images/parfum1.jpeg",
  "price": 3500,
  "brand": "parfum",
  "rating": 2.0,
  "numReviews": 5,
  "countInStock": 50,
  "description": "tres bon parfum",
  "isFeatured": true,
  "banner": "/images/parfum2.jpeg",
  "__v": 0,
  "createdAt": {
    "$date": "2024-08-07T07:44:00.000Z"
  },
  "updatedAt": {
    "$date": "2024-08-07T07:44:00.000Z"
  }
















lib


import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}




// IconButton.d.ts
import React from 'react';

interface IconButtonProps {

  src?:string;
  trigger?: 'hover' | 'click' | 'loop' | 'loop-on-hover' | 'morph' | 'morph-two-way';
  size?: string;
  colors?:string;
  stroke?:string;
  style?:string;
}

declare const IconButton: React.FC<IconButtonProps>;

export default IconButton;







export const round2 = (num: number) =>
  Math.round((num + Number.EPSILON) * 100) / 100

export function convertDocToObj(doc: any) {
  doc._id = doc._id.toString()
  return doc
}

export const formatNumber = (x: number) => {
  return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',')
}

export const formatId = (x: string) => {
  return `..${x.substring(20, 24)}`
}



  } catch (error:any) {
    if (error.code === 11000) {
      console.warn(`Produit avec le slug "${Products.name}" existe déjà. Mise à jour effectuée.`)
    } else {
      console.error(`Erreur lors de l'insertion/mise à jour du produit ${Products.name}:`, error)
    }
  }



tailwind conf:
import type { Config } from 'tailwindcss'

const config: Config = {
  content: [
    './pages/**/*.{js,ts,jsx,tsx,mdx}',
    './components/**/*.{js,ts,jsx,tsx,mdx}',
    './app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  daisyui: {
    themes: [
      {
        light: {
          ...require('daisyui/src/theming/themes')['light'],
          primary: '#fbbf24',
          '.toaster-con': {
            'background-color': 'white',
            color: 'black',
          },
        },
        dark: {
          ...require('daisyui/src/theming/themes')['dark'],
          primary: '#fbbf24',
          '.toaster-con': {
            'background-color': 'black',
            color: 'white',
          },
        },
      },
    ],
  },
  darkMode: ['class', '["dark"]'],
  plugins: [require('daisyui')],
}
export default config


ts conf 
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
